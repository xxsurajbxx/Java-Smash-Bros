import xxsurajbxx.game.Input;import java.awt.event.KeyEvent;import java.awt.event.MouseEvent;public class InputHandler extends Input {    private boolean x=false;    public void handleInput() {}    public void keyPressed(KeyEvent key) {        if(GSM.getState()==GSM.RUNNING) {            super.keyPressed(key);            switch(key.getKeyCode()) {                case KeyEvent.VK_W:                xxJavaSmashBros.p1.jump(xxJavaSmashBros.LOWER_BOUND, xxJavaSmashBros.JUMP_FALL_SPEED);                break;                case KeyEvent.VK_UP:                xxJavaSmashBros.p2.jump(xxJavaSmashBros.LOWER_BOUND, xxJavaSmashBros.JUMP_FALL_SPEED);                break;                case KeyEvent.VK_A:                if(!xxJavaSmashBros.p1.crouched) {                    xxJavaSmashBros.p1.setAnimation(keys[KeyEvent.VK_SHIFT] ? Player.SPRINTING : Player.WALKING);                    xxJavaSmashBros.p1.velocityX = keys[KeyEvent.VK_SHIFT] ? -xxJavaSmashBros.SPRINT_SPEED : -xxJavaSmashBros.WALK_SPEED;                }                xxJavaSmashBros.p1.orientation = -1;                break;                case KeyEvent.VK_LEFT:                if(!xxJavaSmashBros.p2.crouched) {                    xxJavaSmashBros.p2.setAnimation(keys[KeyEvent.VK_CONTROL] ? Player.SPRINTING : Player.WALKING);                    xxJavaSmashBros.p2.velocityX = keys[KeyEvent.VK_CONTROL] ? -xxJavaSmashBros.SPRINT_SPEED : -xxJavaSmashBros.WALK_SPEED;                }                xxJavaSmashBros.p2.orientation = -1;                break;                case KeyEvent.VK_S:                if(!xxJavaSmashBros.p1.jumping&&!xxJavaSmashBros.p1.falling) {                    xxJavaSmashBros.p1.crouched = true;                    xxJavaSmashBros.p1.velocityX=0;                    xxJavaSmashBros.p1.setAnimation(Player.CROUCHING);                }                break;                case KeyEvent.VK_DOWN:                if(!xxJavaSmashBros.p2.jumping&&!xxJavaSmashBros.p2.falling) {                    xxJavaSmashBros.p2.crouched = true;                    xxJavaSmashBros.p2.velocityX=0;                    xxJavaSmashBros.p2.setAnimation(Player.CROUCHING);                }                break;                case KeyEvent.VK_D:                if(!xxJavaSmashBros.p1.crouched) {                    xxJavaSmashBros.p1.setAnimation(keys[KeyEvent.VK_SHIFT] ? Player.SPRINTING : Player.WALKING);                    xxJavaSmashBros.p1.velocityX = keys[KeyEvent.VK_SHIFT] ? xxJavaSmashBros.SPRINT_SPEED : xxJavaSmashBros.WALK_SPEED;                }                xxJavaSmashBros.p1.orientation = 1;                break;                case KeyEvent.VK_RIGHT:                if(!xxJavaSmashBros.p2.crouched) {                    xxJavaSmashBros.p2.setAnimation(keys[KeyEvent.VK_CONTROL] ? Player.SPRINTING : Player.WALKING);                    xxJavaSmashBros.p2.velocityX = keys[KeyEvent.VK_CONTROL] ? xxJavaSmashBros.SPRINT_SPEED : xxJavaSmashBros.WALK_SPEED;                }                xxJavaSmashBros.p2.orientation = 1;                break;                case KeyEvent.VK_SHIFT:                if(xxJavaSmashBros.p1.velocityX==5) {xxJavaSmashBros.p1.velocityX=10; xxJavaSmashBros.p1.setAnimation(Player.SPRINTING);}                if(xxJavaSmashBros.p1.velocityX==-5) {xxJavaSmashBros.p1.velocityX=-10; xxJavaSmashBros.p1.setAnimation(Player.SPRINTING);}                break;                case KeyEvent.VK_CONTROL:                if(xxJavaSmashBros.p2.velocityX==5) {xxJavaSmashBros.p2.velocityX=10; xxJavaSmashBros.p2.setAnimation(Player.SPRINTING);}                if(xxJavaSmashBros.p2.velocityX==-5) {xxJavaSmashBros.p2.velocityX=-10; xxJavaSmashBros.p2.setAnimation(Player.SPRINTING);}                break;                case KeyEvent.VK_K:                if(xxJavaSmashBros.p1.numofThrowables<9) {                    if(xxJavaSmashBros.p1.jumping||xxJavaSmashBros.p1.falling) {                        xxJavaSmashBros.p1.setAnimation(Player.AIR_SPECIAL);                        xxJavaSmashBros.p1.throw_weapon(xxJavaSmashBros.p1.x+xxJavaSmashBros.p1.getFrameInfo().width, xxJavaSmashBros.p1.y+xxJavaSmashBros.p1.getFrameInfo().height, xxJavaSmashBros.p1.orientation==1 ? 135 : 225, Player.AIR_SPECIAL);                    }                    else if(xxJavaSmashBros.p1.crouched) {                        xxJavaSmashBros.p1.setAnimation(Player.D_SPECIAL);                        xxJavaSmashBros.p1.throw_weapon(xxJavaSmashBros.p1.x+(xxJavaSmashBros.p1.orientation==1?xxJavaSmashBros.p1.getFrameInfo().width:-xxJavaSmashBros.p1.getFrameInfo().width), xxJavaSmashBros.p1.y+((xxJavaSmashBros.p1.getFrameInfo().height/4)*3), xxJavaSmashBros.p1.orientation==1 ? 90 : 270, Player.D_SPECIAL);                    }                    else {                        xxJavaSmashBros.p1.setAnimation(Player.SPECIAL);                        xxJavaSmashBros.p1.throw_weapon(xxJavaSmashBros.p1.x+(xxJavaSmashBros.p1.orientation==1?xxJavaSmashBros.p1.getFrameInfo().width:-xxJavaSmashBros.p1.getFrameInfo().width), xxJavaSmashBros.p1.y+(xxJavaSmashBros.p1.getFrameInfo().height/2), xxJavaSmashBros.p1.orientation==1 ? 90 : 270, Player.SPECIAL);                    }                }                break;                case KeyEvent.VK_X:                if(xxJavaSmashBros.p2.numofThrowables<9) {                    if(xxJavaSmashBros.p2.jumping||xxJavaSmashBros.p2.falling) {                        xxJavaSmashBros.p2.setAnimation(Player.AIR_SPECIAL);                        xxJavaSmashBros.p2.throw_weapon(xxJavaSmashBros.p2.x+xxJavaSmashBros.p2.getFrameInfo().width, xxJavaSmashBros.p2.y+xxJavaSmashBros.p2.getFrameInfo().height, xxJavaSmashBros.p2.orientation==1 ? 135 : 225, Player.AIR_SPECIAL);                    }                    else if(xxJavaSmashBros.p2.crouched) {                        xxJavaSmashBros.p2.setAnimation(Player.D_SPECIAL);                        xxJavaSmashBros.p2.throw_weapon(xxJavaSmashBros.p2.x+(xxJavaSmashBros.p2.orientation==1?xxJavaSmashBros.p2.getFrameInfo().width:-xxJavaSmashBros.p2.getFrameInfo().width), xxJavaSmashBros.p2.y+((xxJavaSmashBros.p2.getFrameInfo().height/4)*3), xxJavaSmashBros.p2.orientation==1 ? 90 : 270, Player.D_SPECIAL);                    }                    else {                        xxJavaSmashBros.p2.setAnimation(Player.SPECIAL);                        xxJavaSmashBros.p2.throw_weapon(xxJavaSmashBros.p2.x+(xxJavaSmashBros.p2.orientation==1?xxJavaSmashBros.p2.getFrameInfo().width:-xxJavaSmashBros.p2.getFrameInfo().width), xxJavaSmashBros.p2.y+(xxJavaSmashBros.p2.getFrameInfo().height/2), xxJavaSmashBros.p2.orientation==1 ? 90 : 270, Player.SPECIAL);                    }                }                break;                case KeyEvent.VK_L:                if(xxJavaSmashBros.p1.crouched) {xxJavaSmashBros.p1.setAnimation(Player.D_LIGHT); xxJavaSmashBros.p1.velocityX=0;}                else if(keys[KeyEvent.VK_SHIFT]) {xxJavaSmashBros.p1.setAnimation(Player.R_LIGHT);}                else if(keys[KeyEvent.VK_D]||keys[KeyEvent.VK_A]) {xxJavaSmashBros.p1.setAnimation(Player.F_LIGHT); xxJavaSmashBros.p1.velocityX=0;}                else {xxJavaSmashBros.p1.setAnimation(Player.LIGHT); xxJavaSmashBros.p1.velocityX=0;}                break;                case KeyEvent.VK_Z:                if(xxJavaSmashBros.p2.crouched) {xxJavaSmashBros.p2.setAnimation(Player.D_LIGHT); xxJavaSmashBros.p2.velocityX=0;}                else if(keys[KeyEvent.VK_CONTROL]) {xxJavaSmashBros.p2.setAnimation(Player.R_LIGHT);}                else if(keys[KeyEvent.VK_LEFT]||keys[KeyEvent.VK_RIGHT]) {xxJavaSmashBros.p2.setAnimation(Player.F_LIGHT); xxJavaSmashBros.p2.velocityX=0;}                else {xxJavaSmashBros.p2.setAnimation(Player.LIGHT); xxJavaSmashBros.p2.velocityX=0;}                break;            }        }    }    public void keyReleased(KeyEvent key) {        super.keyReleased(key);        if(GSM.getState()==GSM.RUNNING) {            switch(key.getKeyCode()) {                case KeyEvent.VK_W:                xxJavaSmashBros.p1.setAnimation(Player.STANCE);                break;                case KeyEvent.VK_UP:                xxJavaSmashBros.p2.setAnimation(Player.STANCE);                break;                case KeyEvent.VK_A:                if(!xxJavaSmashBros.p1.crouched&&!xxJavaSmashBros.p1.falling&&!xxJavaSmashBros.p1.jumping) {xxJavaSmashBros.p1.setAnimation(Player.STANCE);}                xxJavaSmashBros.p1.velocityX = 0;                break;                case KeyEvent.VK_LEFT:                if(!xxJavaSmashBros.p2.crouched&&!xxJavaSmashBros.p2.falling&&!xxJavaSmashBros.p2.jumping) {xxJavaSmashBros.p2.setAnimation(Player.STANCE);}                xxJavaSmashBros.p2.velocityX = 0;                break;                case KeyEvent.VK_S:                xxJavaSmashBros.p1.crouched = false;                xxJavaSmashBros.p1.setAnimation(Player.STANCE);                break;                case KeyEvent.VK_DOWN:                xxJavaSmashBros.p2.crouched = false;                xxJavaSmashBros.p2.setAnimation(Player.STANCE);                break;                case KeyEvent.VK_D:                if(!xxJavaSmashBros.p1.crouched&&!xxJavaSmashBros.p1.falling&&!xxJavaSmashBros.p1.jumping) {xxJavaSmashBros.p1.setAnimation(Player.STANCE);}                xxJavaSmashBros.p1.velocityX = 0;                break;                case KeyEvent.VK_RIGHT:                if(!xxJavaSmashBros.p2.crouched&&!xxJavaSmashBros.p2.falling&&!xxJavaSmashBros.p2.jumping) {xxJavaSmashBros.p2.setAnimation(Player.STANCE);}                xxJavaSmashBros.p2.velocityX = 0;                break;                case KeyEvent.VK_SHIFT:                if(xxJavaSmashBros.p1.velocityX==10) {xxJavaSmashBros.p1.velocityX=5; xxJavaSmashBros.p1.setAnimation(Player.WALKING);}                if(xxJavaSmashBros.p1.velocityX==-10) {xxJavaSmashBros.p1.velocityX=-5; xxJavaSmashBros.p1.setAnimation(Player.WALKING);}                break;                case KeyEvent.VK_CONTROL:                if(xxJavaSmashBros.p2.velocityX==10) {xxJavaSmashBros.p2.velocityX=5; xxJavaSmashBros.p2.setAnimation(Player.WALKING);}                if(xxJavaSmashBros.p2.velocityX==-10) {xxJavaSmashBros.p2.velocityX=-5; xxJavaSmashBros.p2.setAnimation(Player.WALKING);}                break;                case KeyEvent.VK_L:                if(xxJavaSmashBros.p1.crouched) {xxJavaSmashBros.p1.setAnimation(Player.CROUCHING);}                else {xxJavaSmashBros.p1.setAnimation(Player.STANCE);}                break;                case KeyEvent.VK_Z:                if(xxJavaSmashBros.p2.crouched) {xxJavaSmashBros.p2.setAnimation(Player.CROUCHING);}                else {xxJavaSmashBros.p2.setAnimation(Player.STANCE);}                break;            }        }    }    public void mouseClicked(MouseEvent mouse) {        switch(GSM.getState()) {            case GSM.START:            if(mouse.getX()<600&&mouse.getX()>200&&mouse.getY()<325&&mouse.getY()>125) {                GSM.setState(GSM.CHARACTER_SELECT);            }            break;            case GSM.CHARACTER_SELECT:            if(mouse.getX()<300&&mouse.getX()>100&&mouse.getY()<275&&mouse.getY()>175) {                if(x) {xxJavaSmashBros.p2 = new Player("naruto", 100, 700, 300, 45, 50, 45, 50); xxJavaSmashBros.p2.orientation=-1; GSM.setState(GSM.RUNNING);}                else{xxJavaSmashBros.p1 = new Player("naruto", 100, 100, 300, 45, 50, 45, 50); x=true;}            }            /* if(mouse.getX()<700&&mouse.getX()>500&&mouse.getY()<275&&mouse.getY()>175) {                if(x) {xxJavaSmashBros.p2 = new Player("sasuke", 100, 700, 300, 45, 50, 45, 50); xxJavaSmashBros.p2.orientation=-1; GSM.setState(GSM.RUNNING);}                else {xxJavaSmashBros.p1 = new Player("sasuke", 100, 100, 300, 45, 50, 45, 50); x=true;}            } */            x=true;            break;        }    }}